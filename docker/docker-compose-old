version: '3'

services:

  nginx:
    # container_name: nginx_container
    hostname: nginx
    image: nginx:latest
    restart: always
    ports:
      - 9999:9999
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
    depends_on:
      - api1
      # - api2

  api1:
    # container_name: app # overwriten by replica mode
    hostname: api1
    image: rinha-backend-php:latest
    restart: always
    ports:
      - 8080:80
    volumes:
        - ./app:/var/www/html/
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.75GB'
    depends_on:
      - pgsql
  
  # api2:
  #   # container_name: app # overwriten by replica mode
  #   hostname: api2
  #   image: rinha-backend-php:latest
  #   restart: always
  #   expose:
  #     - 8081:80
  #   volumes:
  #       - ./app:/var/www/html/
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.25'
  #         memory: '0.75GB'
  #   depends_on:
  #     - pgsql
  
  
  # nodejs:
  #   container_name: node_container
  #   image: node-app:latest
  #   restart: always
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./teste/gatling:/gatling/
  
  pgsql:
    container_name: pgsql_container
    hostname: pgsql
    image: postgres:14.8
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=backend
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    ports:
      - 5432
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./docker/pgsql/postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
      - ./docker/pgsql/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1GB'

volumes:
  postgresql_data:
    driver: local
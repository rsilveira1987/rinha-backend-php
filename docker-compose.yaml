version: '3'

services:

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - 9999:9999
    volumes:
      # - ./default.conf:/etc/nginx/conf.d/default.conf
      # - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ulimits:
      nofile:
        soft: "30000"
        hard: "50000"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
    depends_on:
      - swoole-php1
      - swoole-php2

  swoole-php1:
    # image: phpswoole/swoole:latest
    # image: phpswoole/swoole:4.5.2-php7.4
    hostname: swoole-php1
    image: rinha-backend-php:latest
    environment:
      - DOCKER=1
      - HOST=0.0.0.0
      - HOSTNAME=localhost
      - PORT=8080
      - SWOOLE_HTTP_HOST=0.0.0.0 # required for Laravel swoole
      - SWOOLE_HTTP_WEBSOCKET=true # required for Laravel swoole websocket
    # command: php /workdir/serve-file.php start
    # command: php /workdir/client.php start # broken without additional async extension
    # command: php /workdir/channel.php start # broken without additional async extension
    # command: php /workdir/process.php start
    # command: php /workdir/router.php start
    # command: php /workdir/websocket.php start
    # command: php /var/www/html/public/index.php start
    # command: php /workdir/event-source.php start
    # command: php /workdir/users/artisan serve --host=0.0.0.0 --port=1215 # Laravel no swoole
    # command: php /workdir/users/artisan swoole:http start # Laravel with swoole
    expose:
      - 8080
    volumes:
      - ./app:/var/www/html
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '0.5GB'
    depends_on:
      - database
  
  swoole-php2:
    # image: phpswoole/swoole:latest
    # image: phpswoole/swoole:4.5.2-php7.4
    hostname: swoole-php2
    image: rinha-backend-php:latest
    environment:
      - DOCKER=1
      - HOST=0.0.0.0
      - HOSTNAME=localhost
      - PORT=8080
      - SWOOLE_HTTP_HOST=0.0.0.0 # required for Laravel swoole
      - SWOOLE_HTTP_WEBSOCKET=true # required for Laravel swoole websocket
      - REDIS_HOST=cache
      - REDIS_PORT=6379
    # command: php /workdir/serve-file.php start
    # command: php /workdir/client.php start # broken without additional async extension
    # command: php /workdir/channel.php start # broken without additional async extension
    # command: php /workdir/process.php start
    # command: php /workdir/router.php start
    # command: php /workdir/websocket.php start
    # command: php /var/www/html/public/index.php start
    # command: php /workdir/event-source.php start
    # command: php /workdir/users/artisan serve --host=0.0.0.0 --port=1215 # Laravel no swoole
    # command: php /workdir/users/artisan swoole:http start # Laravel with swoole
    expose:
      - 8080
    volumes:
      - ./app:/var/www/html
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '0.5GB'
    depends_on:
      - database
  
  redis:
    container_name: cache
    image: redis:7.0.10
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
  
  database:
    container_name: mysql_container
    image: mysql:8.1.0
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=backend
    volumes:
      - data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/my.cnf
      - ./docker/mysql/schema.sql:/docker-entrypoint-initdb.d/1.sql
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1GB'
  
  # database:
  #   container_name: pgsql_container
  #   hostname: pgsql
  #   image: postgres:14.8
  #   restart: always
  #   environment:
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_DB=backend
  #   command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
  #   ports:
  #     - 5432
  #   volumes:
  #     - data:/var/lib/postgresql/data
  #     - ./docker/pgsql/postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
  #     - ./docker/pgsql/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: '1GB'

volumes:
  data:
    driver: local
  # data:
  #   driver_opts:
  #     type: tmpfs
  #     device: tmpfs